/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.2.1/userguide/java_library_plugin.html
 */

version = "SPARK-2.3.2"

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
    }
}

apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'scala'
apply plugin: "com.github.johnrengelman.shadow"

repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://repo.hortonworks.com/content/repositories/releases/' }
    maven { url 'https://mvnrepository.com/repos/hortonworks-releases' }

}

dependencies {
    compile group: 'com.hortonworks.hive', name: 'hive-warehouse-connector_2.11', version: '1.0.0.3.1.0.0-78'
    compile project(':fractal-core')
    compile project(':fractal-apps')
}

shadowJar {
    zip64 true
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer.class) {
        resource = "reference.conf"
    }
}

task scalaTest(dependsOn: ['testClasses'], type: JavaExec) {
    environment "SPARK_SCALA_VERSION", "2.11"
    main = 'org.scalatest.tools.Runner'
    args = ['-R', 'build/classes/scala/test', '-o']
    classpath = sourceSets.test.runtimeClasspath
}

test.dependsOn scalaTest

task assemble(dependsOn: ['shadowJar'], overwrite: true)

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'java'
    apply plugin: 'scala'
    apply plugin: "com.github.johnrengelman.shadow"

    task scalaTest(dependsOn: ['testClasses'], type: JavaExec) {
        environment "SPARK_SCALA_VERSION", "2.11"
        main = 'org.scalatest.tools.Runner'
        args = ['-R', 'build/classes/scala/test', '-o']
        classpath = sourceSets.test.runtimeClasspath
    }

    shadowJar {
        zip64 true
        transform(com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer.class) {
            resource = "reference.conf"
        }
    }

    test.dependsOn scalaTest

    task assemble(dependsOn: ['test', 'shadowJar'], overwrite: true)
}
