{
  "settings": [
    {
      "name": "spark.master",
      "value": "spark://10.21.0.160:7077"
    },
    {
      "name": "spark.sql.hive.hiveserver2.jdbc.url",
      "value": "jdbc:hive2://hadoopmn-gsi-prod01.mpmg.mp.br:2181,hadoopmn-gsi-prod02.mpmg.mp.br:2181,hadoopmn-gsi-prod03.mpmg.mp.br:2181/;serviceDiscoveryMode=zooKeeper;zooKeeperNamespace=hiveserver2;AuthMech=3;password=UFMGtrilhas2020;user=trilhasgsi"
    },
    {
      "name": "spark.datasource.hive.warehouse.exec.results.max",
      "value": "2147483647"
    },
    {
      "name": "spark.driver.memory",
      "value": "10g"
    },
    {
      "name": "spark.executor.memory",
      "value": "10g"
    },
    {
      "name": "spark.driver.extraJavaOptions",
      "value": "-Xms10g"
    },
    {
      "name": "spark.executor.heartbeatInterval",
      "value": "60s"
    }
  ],
  "temporary_tables": [
    {
      "name": "rfb_com_meso",
      "value": "select \n\tA.cnpj\n\t,A.municipio\n\t,A.uf\n\t,A.situacao_cadastral_desc\n\t,C.nom_meso_regiao\nfrom\n\tdataset.rfb_cnpj_201905 A\nleft join (select UPPER(B.nom_entidade) nom_entidade, B.nom_meso_regiao from  postgres_olap_lins.dim_entidade B where B.sgl_entidade_pai = 'MG') C\non A.municipio == C.nom_entidade"
    },
    {
      "name": "temp_licitacoes",
      "value": "select \n\t\tdistinct C.num_documento\n\t\t,1 flag_licitacao\n\tfrom postgres_olap_lins.dim_licitacao_habilitado C"
    },
    {
      "name": "temp_socios",
      "value": "select\n        A.cnpj\n        ,A.uf\n        ,B.cpf_cnpj_socio \n        ,F.flag_licitacao\n    from \n\trfb_com_meso A\n    left join dataset.rfb_cnpj_201905_socios B\n    on A.cnpj = B.cnpj\n    left join temp_licitacoes F\n    on A.cnpj = F.num_documento\n    where\n        A.mesorregiao in ('Metropolitana de Belo Horizonte')\n\t\tand A.situacao_cadastral_desc = 'ATIVA'\n        or F.flag_licitacao is not null"
    }
  ],
  "query": "select distinct * from (\n\tselect \n\t    A.cnpj cnpj1 \n\t    ,B.cnpj cnpj2\n\tfrom\n\t    temp_socios A\n\tleft join temp_socios B\n\ton A.cpf_cnpj_socio = B.cpf_cnpj_socio\n\twhere A.cnpj != B.cnpj\n) C"
}

