{
  "spark_fractal": [
    {
      "name": "spark.app.name",
      "value": "fractal-ReadDatabaseApp"
    },
    {
      "name": "spark.master",
      "value": "yarn"
    },
    {
      "name": "spark.driver.host",
      "value": "10.21.0.127"
    },
    {
      "name": "spark.executor.memory",
      "value": "4g"
    },{
      "name": "spark.hadoop.hive.llap.daemon.service.hosts",
      "value": "@llap0"
    }
  ],
  "spark_database": [
    {
      "name": "spark.sql.hive.hiveserver2.jdbc.url",
      "value": "jdbc:hive2://hadoopmn-gsi-prod01.mpmg.mp.br:2181,hadoopmn-gsi-prod02.mpmg.mp.br:2181,hadoopmn-gsi-prod03.mpmg.mp.br:2181/dataset;serviceDiscoveryMode=zooKeeper;zooKeeperNamespace=hiveserver2;AuthMech=3;password=UFMGtrilhas2020;user=trilhasgsi"
    },
    {
      "name": "spark.datasource.hive.warehouse.exec.results.max",
      "value": "2147483647"
    }
  ],
  "database": {
    "temporary_tables": [
	{
		"name": "licitantes_dim_habilitado",
		"value": "select distinct num_documento from postgres_olap_lins.dim_licitacao_habilitado where length(num_documento) = 14"
	},
	{
		"name": "licitantes_e_socios",
		"value": "select A.num_documento as licitante, B.cpf_cnpj_socio as socio from licitantes_dim_habilitado A inner join dataset.rfb_cnpj_201905_socios B on (A.num_documento = B.cnpj)"
	},
	{
		"name": "socios_pj",
		"value": "select distinct socio as cnpj_nos from licitantes_e_socios where (length(socio) = 14)"
	},
	{
		"name": "uniao_licitantes_e_socios",
		"value": "select licitante as cnpj_nos from licitantes_e_socios union select cnpj_nos as cnpj_nos from socios_pj"
	},
	{
		"name": "uniao_licitantes_e_socios_c_rfb_soc",
		"value": "select A.cnpj_nos as cnpj_nos, B.cpf_cnpj_socio as socio from uniao_licitantes_e_socios A join dataset.rfb_cnpj_201905_socios B on (A.cnpj_nos = B.cnpj)"
	}

    ],
   "input_query": "select A.cnpj_nos cnpj1, B.cnpj_nos cnpj2 from uniao_licitantes_e_socios_c_rfb_soc A join uniao_licitantes_e_socios_c_rfb_soc B where (A.socio = B.socio) and (A.cnpj_nos != B.cnpj_nos)",
   "output_query_path": "",
   "input_graph_path": "",
   "output_fractal_path": "/dados-fractal/read_database.csv"
  },
  "fractal": {
    "app": "read_database"
  }
}
